{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/acceleration.js","webpack:///./src/displayWindow.js","webpack:///./src/drawAxis.js","webpack:///./src/drawUneven.js","webpack:///./src/index.js","webpack:///./src/particle.js","webpack:///./src/projectile.js","webpack:///./src/submitAccelForm.js","webpack:///./src/submitForm.js","webpack:///./src/submitProjForm.js","webpack:///./src/velocity.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,iBAAiB,mBAAO,CAAC,qCAAY;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC,0BAA0B,QAAQ;AAClC,+BAA+B,SAAS;AACxC,6BAA6B,gBAAgB;AAC7C,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,gBAAgB,QAAQ,gBAAgB;AACjE,MAAM;AACN;;AAEA,8B;;;;;;;;;;;ACvDA,mBAAmB,mBAAO,CAAC,yCAAc;AACzC,wBAAwB,mBAAO,CAAC,mDAAmB;AACnD,uBAAuB,mBAAO,CAAC,iDAAkB;AACjD,iBAAiB,mBAAO,CAAC,qCAAY;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,+B;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB,kBAAkB,OAAO;AACzB,kBAAkB,MAAM;AACxB,kBAAkB,MAAM;AACxB;;AAEA;;AAEA,0B;;;;;;;;;;;AC9BA;AACA;AACA;;AAEA,4B;;;;;;;;;;;ACJA,sBAAsB,mBAAO,CAAC,+CAAiB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,C;;;;;;;;;;;;;ACPD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA,yB;;;;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,qCAAY;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,SAAS,wDAAwD;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4B;;;;;;;;;;;AC7DA,qBAAqB,mBAAO,CAAC,6CAAgB;AAC7C,iBAAiB,mBAAO,CAAC,qCAAY;AACrC,mBAAmB,mBAAO,CAAC,yCAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,iC;;;;;;;;;;;AC1BA,iBAAiB,mBAAO,CAAC,qCAAY;AACrC,iBAAiB,mBAAO,CAAC,qCAAY;AACrC,mBAAmB,mBAAO,CAAC,yCAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,4B;;;;;;;;;;;AC5CA,mBAAmB,mBAAO,CAAC,yCAAc;AACzC,iBAAiB,mBAAO,CAAC,qCAAY;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,gC;;;;;;;;;;;AClCA,iBAAiB,mBAAO,CAAC,qCAAY;;AAErC;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC,0BAA0B,QAAQ;AAClC,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,qD","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const particle = require('./particle');\n\nfunction acceleration(ctx, particle, actualAccel, maxX = 400, maxY = 400) {\n  // let particles = Array(1)\n  //   .fill(true)\n  //   .map(() => particle([0,100], [1,0], [.8,0]) )\n  const startVel = particle.vel[1];\n  const updatePos = (particle) => {\n    let { pos, vel, accel } = particle;\n    pos = [pos[0] + vel[0], pos[1] - vel[1]]\n    vel = [vel[0], vel[1] + accel[1]]\n    // console.log(particle);\n    return { ...particle, pos, vel };\n  }\n  const toScaleX = (num, maxX = 350) => {\n    return ((num - 100) / 350 * maxX).toFixed(1);\n  }\n  const toScaleY = (num, maxY = 350) => {\n    return ((400 - num) / 350 * maxY).toFixed(1);\n  }\n  const animate = () => {\n    let animationId = requestAnimationFrame(animate);\n    let prevPos = particle.pos;\n    particle = updatePos(particle)\n    let posX = particle.pos[0];\n    let posY = particle.pos[1];\n    ctx.moveTo(prevPos[0], prevPos[1]);\n    ctx.lineTo(particle.pos[0], particle.pos[1]);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(posX, posY, 1, 0 * Math.PI, 2 * Math.PI, true);\n    ctx.stroke();\n    ctx.clearRect(440, 0, 200, 400);\n    let actualX = toScaleX(posX, maxX);\n    let actualY = toScaleY(posY, maxY);\n    ctx.font = \"15px Arial\"\n    ctx.fillText(`Distance: ${actualY} (m/s)`, 460, 100);\n    ctx.fillText(`Time: ${actualX} (s)`, 460, 130);\n    ctx.fillText(`Start vel: ${startVel} (m/s)`, 460, 160);\n    ctx.fillText(`End vel: ${particle.vel[1]} (m/s)`, 460, 190);\n    ctx.fillText(`Accel: ${actualAccel} (m/s)`, 460, 220);\n    ctx.font = \"20px Arial\"\n    if (particle.pos[0] > 449 || particle.pos[1] < 51) {\n      cancelAnimationFrame(animationId);\n    }\n  }\n  animate()\n}\n\n// const log = (particleArray) => {\n//   particleArray.forEach(particle => {\n//     console.log(`x: ${particle.pos[0]} \\ny: ${particle.pos[1]}`);\n//   })\n// }\n\nmodule.exports = acceleration;","const submitForm = require('./submitForm');\nconst submitAccelForm = require('./submitAccelForm');\nconst submitProjForm = require('./submitProjForm');\nconst drawAxis = require('./drawAxis');\n\nfunction displayWindow (canvas) {\n  const topicList = document.querySelector('.topics');\n  const topicWindows = document.querySelectorAll('.topic-window');\n  const equation = document.getElementById('equation');\n  let currentWindow = \"velocity\";\n  let ctx = canvas.getContext(\"2d\");\n  // don't draw axis until topic has been picked\n  // drawAxis(ctx, width, height);\n  topicList.addEventListener('click', function (e) {\n    if (e.target.tagName == 'LI') {\n      const topicClicked = document.querySelector(e.target.dataset.topic)\n      topicWindows.forEach(topicWindow => {\n        if (topicWindow == topicClicked) {\n          topicWindow.classList.add('active');\n          currentWindow = topicWindow.classList[1];\n          console.log(topicClicked);\n          equation.innerText = `${currentWindow}`;\n        } else {\n          topicWindow.classList.remove('active');\n        }\n      });\n      switch(currentWindow) {\n        case \"velocity\":\n          console.log(\"vel case\");\n          ctx.clearRect(0, 0, 2000, 2000);\n          submitForm(ctx);\n          break;\n        case \"acceleration\":\n          console.log(\"accel case\");\n          ctx.clearRect(0, 0, 2000, 2000);\n          submitAccelForm(ctx);\n          break;\n        case \"projectile\":\n          console.log(\"projectile case\");\n          ctx.clearRect(0, 0, 2000, 2000);\n          submitProjForm(ctx);\n          break;\n        default:\n          console.log(\"default case\");\n          ctx.clearRect(0, 0, 2000, 2000);\n          submitForm(ctx);\n      }\n    }\n  })\n}\n\nmodule.exports = displayWindow;","const drawAxis = (ctx, xAxis = \"Time (s)\", yAxis = \"Distance\", width = 400, height = 400) => {\n  ctx.font = \"20px Arial\";\n  ctx.lineWidth = 1;\n  ctx.moveTo(100, 50);\n  // 0,0 origin is at 50, 360\n  // end origin is at 360, 25\n  // grid is 350 px by 350px starting at 100, 400 (0,0) and ends at 450, 50\n  ctx.lineTo(100, height / (height / 350) + 50 );\n  ctx.lineTo(width / (width / 350) + 100 , height / (height / 350) + 50);\n  ctx.stroke();\n  ctx.lineWidth = 0.5;\n  for(let i = 1; i < 10; i ++) {\n    ctx.moveTo(100, 400 - (35 * i));\n    ctx.lineTo(450, 400 - (35 * i));\n  }\n  for (let j = 1; j < 10; j++) {\n    ctx.moveTo(100 + (35 * j), 50);\n    ctx.lineTo(100 + (35 * j), 400);\n  }\n  ctx.stroke();\n  ctx.lineWidth = 1;\n  ctx.fillText(\"0,0\", 80, 420);\n  ctx.fillText(`${width}`, 450, 420);\n  ctx.fillText(`${height}`, 80, 50);\n  ctx.fillText(`${xAxis}`, 250, 420);\n  ctx.fillText(`${yAxis}`, 5, 200);\n  ctx.fillText(\"(m)\", 30, 230);\n  \n}\n\nmodule.exports = drawAxis;","const drawUneven = (ctx) => {\n  ctx.strokeText(\"UNEVEN AXISES\", 180, 440);\n}\n\nmodule.exports = drawUneven;","const displayWindow = require('./displayWindow');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let canvas = document.querySelector('canvas');\n  // canvas.height = window.innerHeight;\n  // canvas.width = window.innerWidth;\n  canvas.height = 450;\n  canvas.width = 600;\n  displayWindow(canvas);\n})","\n\nfunction particle (\n  pos = [random(), random()],\n  vel = [1, 1],\n  accel = [0, 0]\n  ){\n  return {pos, vel, accel}\n}\n\nfunction random(min = 0, max = 450) {\n  let randomNum = (Math.random() * (max - min) + min);\n  return randomNum;\n}\n\nmodule.exports = particle","const particle = require('./particle');\n\nfunction projectile(ctx, particle, maxX = 400, maxY = 400) {\n  const toScaleX = (num, maxX = 350) => {\n    return ((num - 100) / 350 * maxX).toFixed(1);\n  }\n  const toScaleY = (num, maxY = 350) => {\n    return ((400 - num) / 350 * maxY).toFixed(1);\n  }\n\n  //helper method for chooseEquation, \n  //return true if equation is solvable based on known variables\n  const allButOne = (...variables) => {\n    let numUnknown = 0;\n    (variables).forEach((ele) => {\n      if(!ele && ele !== 0) numUnknown++;\n    });\n    return numUnknown === 1;\n  }\n\n  //Choose euqation to solve if all variables are known except 1;\n  const chooseEquation = (particle) => {\n    let { initVel, finalVel, distance, height, accelInput, time } = particle;\n    if (allButOne(finalVel, initVel, accelInput, time)) {\n      console.log(firstEquation(finalVel, initVel, accelInput, time));\n    }\n  }\n\n  const firstEquation = (Vf, Vi, a, t) => {\n    if(!Vf) {\n      console.log(\"Final Velocity\");\n      return Vi + a * t;\n    } else if(!Vi) {\n      console.log(\"Initial Velocity\");\n      return Vf - a * t;\n    } else if (!a) {\n      console.log(\"Acceleration\");\n      return (Vf - Vi) / t;\n    } else {\n      console.log(\"Time\");\n      return (Vf - Vi) / a;\n    }\n  }\n  \n  chooseEquation(particle);\n///////Animate after solving\n  const updatePos = (particle) => {\n\n  }\n\n  const animate = () => {\n\n  }\n  animate()\n}\n//EQUATIONS\n// Vf = Vi + at\n// X = ((Vf + Vi) / 2) * t\n// X = Vi * t + (1/2 * a * tt)\n// Vf2 = Vi2 + (2 * a * X)\n\nmodule.exports = projectile;","const acceleration = require('./acceleration');\nconst drawAxis = require('./drawAxis');\nconst drawUneven = require('./drawUneven');\n\nfunction submitAccelForm(ctx) {\n  ctx.clearRect(0, 0, 2000, 2000);\n  drawAxis(ctx);\n  const inputForm = document.forms['accel-inputs'];\n  inputForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    let vel = parseInt(document.getElementsByClassName(\"accel-window-vel\")[0].value);\n    let time = parseInt(document.getElementsByClassName(\"accel-window-time\")[0].value);\n    let accelAns = vel / time;\n    let particle = { pos: [100, 400], vel: [1, vel] , accel: [1, accelAns] };\n\n    ctx.clearRect(0, 0, 2000, 2000)\n    drawAxis(ctx, undefined, undefined, 400, 400);\n    acceleration(ctx, particle, accelAns);\n  })\n}\n\n// inputForm.querySelectorAll('input').forEach(input => {\n//   if (input.id == \"pos\" || input.id == \"vel\" ) {\n//     input.classList.add('active')\n//   }\n// })\nmodule.exports = submitAccelForm;","const velocity = require('./velocity');\nconst drawAxis = require('./drawAxis');\nconst drawUneven = require('./drawUneven');\n\nfunction submitForm (ctx) {\n  ctx.clearRect(0, 0, 2000, 2000);\n  drawAxis(ctx);\n  const inputForm = document.forms['vel-inputs'];\n  inputForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    let particle = {pos: [], vel: []};\n    const posValues = inputForm.querySelectorAll(\"#pos\").forEach(valueNode => {\n      particle.pos.push(parseInt(valueNode.value) || 0)\n    });\n    const velValues = inputForm.querySelectorAll(\"#vel\").forEach(valueNode => {\n      particle.vel.push(parseInt(valueNode.value) || 0)\n    });\n    let distance = inputForm.elements.distance.value;\n    let time = inputForm.elements.time.value;\n\n\n    let velocityAns = distance / time;\n    // inputForm.elements.velocity.value = velocityAns;\n    // console.log(velocityAns, \"velocity\")\n    particle = { pos: [100, 400], vel: [1,-velocityAns]}\n    if( velocityAns * 10 > 350) {\n      ctx.clearRect(0, 0, 2000, 2000);\n      drawAxis(ctx, undefined, undefined, 10, velocityAns * 10);\n      drawUneven(ctx);\n      velocity(ctx, particle, velocityAns, 10, velocityAns * 10);\n    } else if (1/velocityAns * 10 > 350) {\n      ctx.clearRect(0, 0, 2000, 2000);\n      particle.vel = [velocityAns, -1];\n      drawAxis(ctx, undefined, undefined, 1/velocityAns * 10, 10);\n      drawUneven(ctx);\n      velocity(ctx, particle, velocityAns, 1 / velocityAns * 10, 10)\n    }\n    else {\n      ctx.clearRect(0, 0, 2000, 2000);\n      drawAxis(ctx, undefined, undefined, 400, 400);\n      velocity(ctx, particle, velocityAns);\n    }\n  })\n}\nmodule.exports = submitForm;","const projectile = require('./projectile');\nconst drawAxis = require('./drawAxis');\n// const drawUneven = require('./drawUneven');\n\nfunction submitProjForm(ctx) {\n  ctx.clearRect(0, 0, 2000, 2000);\n  drawAxis(ctx);\n  const inputForm = document.forms['projectile-inputs'];\n  inputForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const initVel = parseFloat(document.getElementById('projectile-window-init-vel').value);\n    const finalVel = parseFloat(document.getElementById('projectile-window-final-vel').value);\n    const distance = parseFloat(document.getElementById('projectile-window-distance').value);\n    const height = parseFloat(document.getElementById('projectile-window-height').value);\n    const accelInput = parseFloat(document.getElementById('projectile-window-accel').value);\n    const time = parseFloat(document.getElementById('projectile-window-time').value);\n    let particle = { \n      pos: [100, 400], \n      vel: [0, 0], \n      accel: [0, 0], \n      initVel,\n      finalVel,\n      distance,\n      height,\n      accelInput,\n      time\n    };\n    // ctx.clearRect(0, 0, 2000, 2000)\n    // drawAxis(ctx, undefined, undefined, 400, 400);\n    // console.log(particle);\n    projectile(ctx, particle);\n  })\n}\n\nmodule.exports = submitProjForm;","const particle = require('./particle');\n\nfunction velocity(ctx, particle, actualVel, maxX = 400, maxY = 400) {\n  // console.log(particle)\n  const updatePos = (particle) => {\n    let {pos, vel, accel }= particle;\n    //if Y values are so large, zoom out on Y-axis, zoom in to x-axis\n    if(maxY > 400) {\n      pos = [pos[0] + (vel[0] / 10) * 350 , pos[1] + (vel[1] / maxY) * 350 ];\n    } else if (maxX > 400) {\n      pos = [pos[0] + (1/vel[0] / maxX) * 350, pos[1] + (vel[1] / 10) * 350];\n    }\n    else {\n      pos = [pos[0] + vel[0], pos[1] + vel[1]];\n    }\n    return { ...particle, pos};\n  }\n  // const pytha = (num1, num2) => {\n  //   let pythaNum = Math.sqrt(num1 * num1 + num2* num2);\n  //   return pythaNum;\n  // }\n  const toScaleX = (num, maxX = 350) => {\n    return ((num - 100) / 350 * maxX).toFixed(1);\n  }\n  const toScaleY = (num, maxY = 350) => {\n    return ((400 - num) / 350 * maxY).toFixed(1);\n  }\n  const animate = () => {\n    let animationId = requestAnimationFrame(animate);\n    let prevPos = particle.pos;\n    // console.log(\"prevPos\", prevPos);\n    particle = updatePos(particle)\n    let posX = particle.pos[0];\n    let posY = particle.pos[1];\n    // console.log(\"currentPos\", particle.pos);\n    ctx.moveTo(prevPos[0], prevPos[1]);\n    ctx.lineTo(particle.pos[0], particle.pos[1]);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(posX, posY, 1, 0 * Math.PI, 2 * Math.PI, true);\n    ctx.stroke();\n    ctx.clearRect(440, 0, 200, 400);\n    let actualX = toScaleX(posX, maxX);\n    let actualY = toScaleY(posY, maxY);\n    ctx.font = \"15px Arial\"\n    ctx.fillText(`Distance: ${actualY} (m)`, 460, 100);\n    ctx.fillText(`Time: ${actualX} (s)`, 460, 130);\n    ctx.fillText(`Velocity: ${actualVel} (m/s)`, 460, 160);\n    ctx.font = \"20px Arial\"\n    if (particle.pos[0] > 449 || particle.pos[1] < 51 ) {\n      cancelAnimationFrame(animationId);\n    }\n  }\n  animate();\n}\n\n\nmodule.exports = velocity;\n\n//onclick even bound to LI instead of submit button\n//particle properties\n//dynamic width and height\n//intuitive input\n//clear out input values when switching between forms"],"sourceRoot":""}